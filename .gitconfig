[core]
  excludesfile = ~/.gitignore-global
	editor = nvim
[push]
	default = current
[pull]
	rebase = false
[init]
	defaultBranch = main
[diff]
  tool = nvimdiff
[color]
  status = auto
  diff = auto
  branch = auto
  interactive = auto
  grep = auto
  ui = auto
[alias]
  # general
  s = status
  f = fetch

  # log
  l = lg
  lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
  lo = log --oneline

  # add
  a = "!~/.scripts/git/git-add.sh"
  aa = "add --all"
  ap = "add --patch"
  ai = "add --interactive"

  # checkout
  co = "!~/.scripts/git/git-checkout.sh"
  cb = checkout -b

  # commit
  ci = commit
  ca = commit -a
  cm = commit -m
  cam = commit -am

  # reset
  rs = reset --soft HEAD^

  # push
  ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
  psn = ps --no-verify
  fp = push --force-with-lease

  # pull
  pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"

  # revert
  rv = "!~/.scripts/git/git-revert.sh"

  # branch
  b = "!~/.scripts/git/git-branch.sh"
  bl = "!~/.scripts/git/git-branch-list.sh"
  bm = branch -m
  bM = branch -M
  bd = "!~/.scripts/git/git-branch-delete.sh -d"
  bD = "!~/.scripts/git/git-branch-delete.sh -D"

  # diff
  d = diff
  dw = diff --word-diff
  dh = diff HEAD^

  # rebase
  rb = "!~/.scripts/git/git-rebase.sh"
  rbc = rebase --continue
  rbs = rebase --skip
  rba = rebase --abort
  rbi = "!~/.scripts/git/git-rebase-interactive.sh"

  # restore
  rt = "!~/.scripts/git/git-restore-staged.sh"

  # merge
  m = "!~/.scripts/git/git-merge.sh"
  ma = merge --abort
  mc = merge --continue

  # stash
  ss = stash --all
  sa = "!~/.scripts/git/git-stash.sh apply"
  sd = "!~/.scripts/git/git-stash.sh drop"
  sp = "!~/.scripts/git/git-stash.sh pop"
  sl = "!git stash list | gum choose --limit 1 >/dev/null"

  # worktree
  wt = worktree
  wl = worktree list
  wa = worktree add
  wr = "!~/.scripts/git/git-worktree-remove.sh"

  # fast conflict resolving
  eu = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; nvim `f`"
  au = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"

  # blame
  blame = blame -w -C -C -C

  # still testing
  hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
  llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
[hub]
  protocol = https
[github]
  user = brendalf
[difftool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "nvimdiff"]
	cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[ghq]
  root = ~/.ghq
[branch]
	autosetuprebase = always
[user]
	name = Breno Silva
[includeIf "gitdir:~/src/work/"]
  path = ~/src/work/.gitconfig
[includeIf "gitdir:~/src/oss/"]
  path = ~/src/oss/.gitconfig
[rerere]
  enabled = true
