"--------------------------------------------------------
" Tabs
"--------------------------------------------------------
nnoremap <space> <Nop>
let mapleader = " "

"--------------------------------------------------------
" Tabs
"--------------------------------------------------------
" Open current directory
nmap te :tabedit<Return>
" List tabs
nmap <S-Tab> :tabprev<Return>
nmap <Tab> :tabnext<Return>

"---------------------------------------------------------
" Windows
"---------------------------------------------------------
" Split window
nmap ss :split<Return><C-w>w
nmap sv :vsplit<Return><C-w>w
" Move window
" nmap <Space> <C-w>w
map s<left> <C-w>r
map s<up> <C-w>k
map s<down> <C-w>j
map s<right> <C-w>l
map sh <C-w>h
map sk <C-w>k
map sj <C-w>j
map sl <C-w>l
" Resize window
nmap <C-w><left> <C-w><
nmap <C-w><right> <C-w>>
nmap <C-w><up> <C-w>+
nmap <C-w><down> <C-w>-

"---------------------------------------------------------
" Productivity
"---------------------------------------------------------
" Replace 
nmap <C-h> :%s/
" Save
nmap <C-s> :w<Return>
" Close
nmap <C-q> :q<Return>
" Reload file
nmap <leader>r :e!<Return>
" Better tabbing
vnoremap < <gv
vnoremap > >gv
" Ctrl c instead of escape
" vnoremap <C-c> <Esc>

"---------------------------------------------------------
" Git Fugitive
"---------------------------------------------------------
" Git status
nmap <leader>gs :G<Return>
" Git blame
nmap <leader>gb :Git blame<Return>

"---------------------------------------------------------
" Maximizer
"---------------------------------------------------------
" Toggle
nnoremap <leader>m :MaximizerToggle!<Return>

"---------------------------------------------------------
" Vimspector
"---------------------------------------------------------
" Open Debugger
nnoremap <leader>dd :call vimspector#Launch()<Return>
" Close Debugger
nnoremap <leader>de :call vimspector#Reset()<Return>
" Moving to Windows
"nnoremap <leader>dc :call GotoWindow(g:vimspector_session_windows.code)<Return>
" Debugging 
nmap <leader>dl <Plug>VimspectorStepInto 
nmap <leader>dj <Plug>VimspectorStepOver 
nmap <leader>dk <Plug>VimspectorStepOut 
nmap <leader>dr <Plug>VimspectorRestart 
nnoremap <leader>d<space> :call vimspector#Continue()<Return>
" Breakpoints 
nmap <leader>drc <Plug>VimspectorRunToCursor 
nmap <leader>dbp <Plug>VimspectorToggleBreakpoint 
nmap <leader>dcbp <Plug>VimspectorToggleConditionalBreakpoint 
